{"version":3,"sources":["javascript/store.js","static/images/logo.png","javascript/reducers/filters.js","javascript/reducers/spotify.js","javascript/reducers/index.js","javascript/createStore.js","javascript/actions/spotify.js","javascript/constants/urls.js","javascript/components/Login.jsx","javascript/containers/Login.jsx","javascript/actions/filters.js","javascript/components/filters/LimitFilter.jsx","javascript/components/filters/SelectFilter.jsx","javascript/components/filters/DateFilter.jsx","javascript/components/filters/NumericFilter.jsx","javascript/components/filters/TextFilter.jsx","javascript/components/Filter.jsx","javascript/containers/Filter.jsx","javascript/components/PlaylistCard.jsx","javascript/components/FeaturedPlaylists.jsx","javascript/containers/FeaturedPlaylists.jsx","javascript/components/Header.jsx","javascript/components/App.jsx","serviceWorker.js","index.js","javascript/utils/index.js"],"names":["store","createStore","process","module","exports","defaultState","values","accessToken","playlists","combineReducers","filters","state","action","type","GET_TRENDING_PLAYLISTS_FILTERS","_","get","groupById","SET_FILTER","payload","field","value","spotify","SET_ACCESS_TOKEN","token","FETCH_FEATURED_PLAYLISTS","compose","applyMiddleware","ReduxPromise","ReduxThunk","createStoreWithMiddleware","rootReducer","actionCreators","setAccessToken","fetchFeaturedPlaylists","headers","Authorization","queryString","param","url","promise","axios","Login","props","clearExpiredToken","bind","this","hash","parseHash","window","location","access_token","expiration","expires_in","setTimeout","className","href","getLoginURL","Component","connect","dispatch","spotifyActions","getFilters","setFilter","LimitFilter","handleChange","name","limitFilter","filter","min","max","isFilterLoaded","id","maxValue","minValue","disabled","limitValue","onChange","SelectFilter","map","label","option","selectFilter","options","getOptions","classNamePrefix","DateFilter","date","dateFormat","moment","format","toUpperCase","dateFilter","formattedDate","toDate","selected","NumericFilter","numericFilter","TextFilter","event","target","Filter","prevProps","prevState","fetchPlaylists","currentFilters","oldFilters","isEqual","limit","locale","country","timestamp","offset","filterActions","playlistImage","playlist","PlaylistCard","Card","body","inverse","CardImg","top","width","src","alt","CardBody","CardTitle","playlistName","CardSubtitle","playlistOwner","Button","onClick","open","playlistLink","variant","FeaturedPlaylists","nameFilter","includes","matchesFilter","key","uniq","interval","setInterval","clearInterval","length","renderPlaylists","Header","logo","PureComponent","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","substring","split","reduce","initial","item","parts","decodeURIComponent","array","objectsByKeyValue","obj","params","Object","keys","k","encodeURIComponent","join"],"mappings":"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","file":"static/js/main.e59a3f43.chunk.js","sourcesContent":["import createStore from \"./createStore\";\nconst store = createStore(process);\n\nexport default store;\n","module.exports = __webpack_public_path__ + \"static/media/logo.819894ce.png\";","import _ from \"lodash\";\nimport {\n  GET_TRENDING_PLAYLISTS_FILTERS,\n  SET_FILTER,\n} from \"../constants/index.json\";\nimport { groupById } from \"../utils\";\n\nconst defaultState = {\n  values: {},\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case `${GET_TRENDING_PLAYLISTS_FILTERS}_FULFILLED`:\n      const filters = _.get(\n        action,\n        \"payload.data.filters\",\n        defaultState.filters,\n      );\n      return {\n        ...state,\n        ...groupById(filters),\n      };\n\n    case SET_FILTER:\n      const { field, value } = action.payload;\n      return {\n        ...state,\n        values: {\n          ...state.values,\n          [field]: value,\n        },\n      };\n\n    default:\n      return { ...state };\n  }\n};\n","import {\n  SET_ACCESS_TOKEN,\n  FETCH_FEATURED_PLAYLISTS,\n} from \"../constants/index.json\";\nimport _ from \"lodash\";\n\nconst defaultState = {\n  accessToken: null,\n  playlists: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case SET_ACCESS_TOKEN:\n      return {\n        ...state,\n        accessToken: action.payload.token,\n      };\n\n    case `${FETCH_FEATURED_PLAYLISTS}_FULFILLED`:\n      const playlists = _.get(action.payload, \"data.playlists.items\", []);\n      return {\n        ...state,\n        playlists,\n      };\n\n    default:\n      return { ...state };\n  }\n};\n","import { combineReducers } from \"redux\";\n\nimport filters from \"./filters\";\nimport spotify from \"./spotify\";\n\nexport default combineReducers({\n  filters,\n  spotify,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport ReduxPromise from \"redux-promise-middleware\";\nimport ReduxThunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nlet createStoreWithMiddleware;\n\nexport default () => {\n  createStoreWithMiddleware = compose(\n    applyMiddleware(ReduxPromise, ReduxThunk),\n  )(createStore);\n\n  const store = createStoreWithMiddleware(rootReducer);\n  return store;\n};\n","import {\n  SET_ACCESS_TOKEN,\n  FETCH_FEATURED_PLAYLISTS,\n} from \"../constants/index.json\";\nimport axios from \"axios\";\nimport { SPOTIFY_FEATURED_PLAYLISTS } from \"../constants/urls.js\";\nimport { param } from \"../utils/index.js\";\n\nconst actionCreators = {\n  setAccessToken(token) {\n    return {\n      type: SET_ACCESS_TOKEN,\n      payload: { token },\n    };\n  },\n\n  fetchFeaturedPlaylists(accessToken, filters) {\n    const headers = { Authorization: `Bearer ${accessToken}` };\n    const queryString = param(filters);\n    const url = `${SPOTIFY_FEATURED_PLAYLISTS}?${queryString}`;\n\n    return {\n      type: FETCH_FEATURED_PLAYLISTS,\n      payload: {\n        promise: axios.get(url, { headers }),\n      },\n    };\n  },\n};\n\nexport default actionCreators;\n","export const TRENDING_PLAYLIST_FILTERS =\n  \"https://www.mocky.io/v2/5a25fade2e0000213aa90776\";\nexport const SPOTIFY_AUTHORIZE = \"https://accounts.spotify.com/authorize\";\nexport const SPOTIFY_FEATURED_PLAYLISTS =\n  \"https://api.spotify.com/v1/browse/featured-playlists\";\n","import React, { Component } from \"react\";\nimport { SPOTIFY_AUTHORIZE } from \"../constants/urls\";\nimport { parseHash } from \"../utils/index.js\";\nimport PropTypes from \"prop-types\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clearExpiredToken = this.clearExpiredToken.bind(this);\n  }\n\n  componentDidMount() {\n    const { accessToken, setAccessToken } = this.props;\n    const hash = parseHash(window.location.hash);\n    const token = hash.access_token;\n    const expiration = hash.expires_in;\n\n    if (!accessToken && token) {\n      setAccessToken(token);\n    }\n\n    if (expiration) {\n      setTimeout(this.clearExpiredToken, expiration * 1000);\n    }\n  }\n\n  clearExpiredToken() {\n    this.props.setAccessToken(null);\n  }\n\n  getLoginURL() {\n    const clientId = \"91a84a82e4e34192a860659488ce3ecf\";\n    const redirectUri = process.env.REACT_APP_REDIRECT_URL;\n    const url = `${SPOTIFY_AUTHORIZE}?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=token&show_dialog=true`;\n\n    return url;\n  }\n\n  render() {\n    const { accessToken } = this.props;\n\n    return (\n      !accessToken && (\n        <div className=\"login-container\">\n          <span className=\"login-request\">\n            Please log in using your Spotify account to be able to see the\n            playlists{\" \"}\n          </span>\n          <a href={this.getLoginURL()} className=\"button\">\n            Login\n          </a>\n        </div>\n      )\n    );\n  }\n}\n\nLogin.propTypes = {\n  setAccessToken: PropTypes.func.isRequired,\n  accessToken: PropTypes.string,\n};\n","import { connect } from \"react-redux\";\nimport spotifyActions from \"../actions/spotify\";\nimport Login from \"../components/Login\";\n\nfunction mapStateToProps(state) {\n  return {\n    accessToken: state.spotify.accessToken,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setAccessToken: token => dispatch(spotifyActions.setAccessToken(token)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Login);\n","import {\n  GET_TRENDING_PLAYLISTS_FILTERS,\n  SET_FILTER,\n} from \"../constants/index.json\";\nimport { TRENDING_PLAYLIST_FILTERS } from \"../constants/urls\";\nimport axios from \"axios\";\n\nconst actionCreators = {\n  getFilters() {\n    return {\n      type: GET_TRENDING_PLAYLISTS_FILTERS,\n      payload: {\n        promise: axios.get(TRENDING_PLAYLIST_FILTERS),\n      },\n    };\n  },\n\n  setFilter(field, value) {\n    return {\n      type: SET_FILTER,\n      payload: {\n        field: field,\n        value: value,\n      },\n    };\n  },\n};\n\nexport default actionCreators;\n","import React, { Component } from \"react\";\nimport InputRange from \"react-input-range\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nexport default class LimitFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(value) {\n    const { name, setFilter } = this.props;\n    setFilter(name, { value });\n  }\n\n  render() {\n    const { filter: limitFilter } = this.props;\n    if (!limitFilter) {\n      return null;\n    }\n\n    const min = _.get(limitFilter, \"validation.min\", null);\n    const max = _.get(limitFilter, \"validation.max\", null);\n    const isFilterLoaded = min && max;\n\n    return (\n      <div className=\"filter-container\" id=\"limit-filter-container\">\n        <div className=\"filter-name\">\n          {(limitFilter && limitFilter.name) || \"\"}\n        </div>\n        <InputRange\n          maxValue={max}\n          minValue={min}\n          disabled={!isFilterLoaded}\n          value={this.props.limitValue || min}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nLimitFilter.propTypes = {\n  filter: PropTypes.object,\n  limitValue: PropTypes.number,\n  setFilter: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nexport default class SelectFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  getOptions() {\n    const { filter } = this.props;\n    const { values } = filter;\n\n    return values.map(value => ({ label: value.name, value: value.value }));\n  }\n\n  handleChange(option) {\n    const { name, setFilter } = this.props;\n    setFilter(name, option);\n  }\n\n  render() {\n    const { filter: selectFilter } = this.props;\n    if (!selectFilter) {\n      return null;\n    }\n\n    return (\n      <div className=\"filter-container\">\n        <div className=\"filter-name\">\n          {(selectFilter && selectFilter.name) || \"\"}\n        </div>\n        <div>\n          <Select\n            options={this.getOptions()}\n            onChange={this.handleChange}\n            classNamePrefix=\"select-filter\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nSelectFilter.propTypes = {\n  filter: PropTypes.object,\n  setFilter: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\nexport default class DateFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(date) {\n    const { name, setFilter, filter } = this.props;\n    const dateFormat = _.get(filter, \"validation.pattern\", \"dd/mm/yyyy\");\n    const formattedDate = moment(date).format(dateFormat.toUpperCase());\n    setFilter(name, { value: formattedDate });\n  }\n\n  render() {\n    const { filter: dateFilter, value } = this.props;\n    if (!dateFilter) {\n      return null;\n    }\n\n    const formattedDate = value ? moment(value).toDate() : null;\n\n    return (\n      <div className=\"filter-container\">\n        <div className=\"filter-name\">\n          {(dateFilter && dateFilter.name) || \"\"}\n        </div>\n        <div>\n          <DatePicker onChange={this.handleChange} selected={formattedDate} />\n        </div>\n      </div>\n    );\n  }\n}\n\nDateFilter.propTypes = {\n  filter: PropTypes.object,\n  setFilter: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.object,\n};\n","import React, { Component } from \"react\";\nimport InputNumber from \"rc-input-number\";\nimport PropTypes from \"prop-types\";\n\nexport default class NumericFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(value) {\n    const { name, setFilter } = this.props;\n    setFilter(name, { value });\n  }\n\n  render() {\n    const { filter: numericFilter } = this.props;\n    if (!numericFilter) {\n      return null;\n    }\n\n    return (\n      <div className=\"filter-container\">\n        <div className=\"filter-name\">\n          {(numericFilter && numericFilter.name) || \"\"}\n        </div>\n        <div>\n          <InputNumber onChange={this.handleChange} />\n        </div>\n      </div>\n    );\n  }\n}\n\nNumericFilter.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  filter: PropTypes.object,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class TextFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { value } = event.target;\n    const { name, setFilter } = this.props;\n    setFilter(name, value);\n  }\n\n  render() {\n    return (\n      <div>\n        <input onChange={this.handleChange} />\n      </div>\n    );\n  }\n}\n\nTextFilter.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport LimitFilter from \"./filters/LimitFilter\";\nimport SelectFilter from \"./filters/SelectFilter\";\nimport DateFilter from \"./filters/DateFilter\";\nimport NumericFilter from \"./filters/NumericFilter\";\nimport TextFilter from \"./filters/TextFilter\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nexport default class Filter extends Component {\n  componentDidMount() {\n    this.props.getFilters();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { accessToken, filters, fetchPlaylists } = this.props;\n    const { values: currentFilters } = filters;\n    const { values: oldFilters } = prevProps.filters;\n    const filtersChanged = !_.isEqual(currentFilters, oldFilters);\n    filtersChanged && fetchPlaylists(accessToken, currentFilters);\n  }\n\n  render() {\n    const { filters, setFilter } = this.props;\n\n    return (\n      <div className=\"filters-container\">\n        <LimitFilter\n          filter={filters.limit}\n          limitValue={_.get(filters, \"values.limit.value\", null)}\n          setFilter={setFilter}\n          name=\"limit\"\n        />\n        <SelectFilter\n          filter={filters.locale}\n          setFilter={setFilter}\n          name=\"locale\"\n        />\n        <SelectFilter\n          filter={filters.country}\n          setFilter={setFilter}\n          name=\"country\"\n        />\n        <DateFilter\n          filter={filters.timestamp}\n          setFilter={setFilter}\n          value={_.get(filters, \"values.timestamp.value\", null)}\n          name=\"timestamp\"\n        />\n        <NumericFilter\n          filter={filters.offset}\n          setFilter={setFilter}\n          name=\"offset\"\n        />\n        <div className=\"filter-container\">\n          <div className=\"filter-name\">Nome</div>\n          <TextFilter setFilter={setFilter} name=\"name\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nFilter.propTypes = {\n  filters: PropTypes.object.isRequired,\n  limitValue: PropTypes.number,\n  accessToken: PropTypes.string,\n  fetchPlaylists: PropTypes.func.isRequired,\n  getFilters: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n","import { connect } from \"react-redux\";\nimport filterActions from \"../actions/filters\";\nimport spotifyActions from \"../actions/spotify\";\nimport Filter from \"../components/Filter\";\n\nfunction mapStateToProps(state) {\n  return {\n    accessToken: state.spotify.accessToken,\n    filters: state.filters,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getFilters: () => dispatch(filterActions.getFilters()),\n    setFilter: (field, value) =>\n      dispatch(filterActions.setFilter(field, value)),\n    fetchPlaylists: (accessToken, filters) =>\n      dispatch(spotifyActions.fetchFeaturedPlaylists(accessToken, filters)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Filter);\n","import React from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  Button,\n} from \"reactstrap\";\nimport _ from \"lodash\";\n\nconst playlistImage = playlist => _.get(playlist, \"images[0].url\", \"\");\nconst playlistName = playlist => _.get(playlist, \"name\", \"\");\nconst playlistOwner = playlist => _.get(playlist, \"owner.display_name\", \"\");\nconst playlistLink = playlist => _.get(playlist, \"external_urls.spotify\", \"\");\n\nconst PlaylistCard = props => {\n  const { playlist } = props;\n  return (\n    playlist && (\n      <div className=\"playlists-container\">\n        <Card body inverse className=\"playlist-card\">\n          <CardImg\n            top\n            width=\"100%\"\n            src={playlistImage(playlist)}\n            alt=\"Card image cap\"\n          />\n          <CardBody>\n            <CardTitle>{playlistName(playlist)}</CardTitle>\n            <CardSubtitle>{playlistOwner(playlist)}</CardSubtitle>\n            <Button\n              onClick={() => window.open(playlistLink(playlist), \"_blank\")}\n              variant=\"primary\"\n            >\n              Go to playlist\n            </Button>\n          </CardBody>\n        </Card>\n      </div>\n    )\n  );\n};\n\nexport default PlaylistCard;\n","import React, { Component } from \"react\";\nimport PlaylistCard from \"./PlaylistCard\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst matchesFilter = (playlist, filter) => {\n  const playlistName = playlist.name.toUpperCase();\n  const nameFilter = filter.toUpperCase();\n  return playlistName.includes(nameFilter);\n};\n\nexport default class FeaturedPlaylists extends Component {\n  renderPlaylists() {\n    const { playlists, filters } = this.props;\n    const nameFilter = _.get(filters, \"name\");\n    const filteredPlaylists = nameFilter\n      ? playlists.filter(playlist => matchesFilter(playlist, filters.name))\n      : playlists;\n\n    return filteredPlaylists.map(playlist => (\n      <PlaylistCard playlist={playlist} key={_.uniq(playlist.name)} />\n    ));\n  }\n\n  fetchPlaylists() {\n    const { accessToken, fetchFeaturedPlaylists, filters } = this.props;\n    fetchFeaturedPlaylists(accessToken, filters);\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.fetchPlaylists(), 30000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const { accessToken, playlists } = this.props;\n    accessToken && playlists.length === 0 && this.fetchPlaylists();\n\n    return <div className=\"playlists-list\">{this.renderPlaylists()}</div>;\n  }\n}\n\nFeaturedPlaylists.propTypes = {\n  getFilters: PropTypes.func,\n  setFilter: PropTypes.func,\n  fetchFeaturedPlaylists: PropTypes.func,\n  accessToken: PropTypes.string,\n  filters: PropTypes.object,\n  playlists: PropTypes.array,\n};\n","import { connect } from \"react-redux\";\nimport FeaturedPlaylists from \"../components/FeaturedPlaylists\";\nimport spotifyActions from \"../actions/spotify\";\n\nfunction mapStateToProps(state) {\n  return {\n    accessToken: state.spotify.accessToken,\n    playlists: state.spotify.playlists,\n    filters: state.filters.values,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchFeaturedPlaylists: (accessToken, filters) =>\n      dispatch(spotifyActions.fetchFeaturedPlaylists(accessToken, filters)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(FeaturedPlaylists);\n","import React, { PureComponent } from \"react\";\nimport logo from \"../../static/images/logo.png\";\n\nexport class Header extends PureComponent {\n  render() {\n    return (\n      <div className=\"header-container\">\n        <img src={logo} alt=\"logo\" />\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"../store\";\nimport Login from \"../containers/Login\";\nimport Filter from \"../containers/Filter\";\nimport FeaturedPlaylists from \"../containers/FeaturedPlaylists\";\nimport Header from \"./Header\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Header />\n          <Filter />\n          <Login />\n          <FeaturedPlaylists />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./javascript/components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const parseHash = hash =>\n  hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((initial, item) => {\n      if (item) {\n        const parts = item.split(\"=\");\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n      return initial;\n    }, {});\n\nexport const groupBy = key => array =>\n  array.reduce((objectsByKeyValue, obj) => {\n    const value = obj[key];\n    objectsByKeyValue[value] = obj;\n    return objectsByKeyValue;\n  }, {});\n\nexport const groupById = groupBy(\"id\");\n\nexport const param = params =>\n  params &&\n  Object.keys(params)\n    .map(k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k].value))\n    .join(\"&\");\n"],"sourceRoot":""}